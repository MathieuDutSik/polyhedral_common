name: release binaries

# https://help.github.com/en/articles/events-that-trigger-workflows#release-event-release
# model taken from https://github.com/mockersf/kmanb/releases
# on: release

on:
  # At 2PM on every Tuesday
  schedule:
    - cron: "0 0 6 * *"
  # Manually triggered
  workflow_dispatch:
  # Disabled right now, when a push is made on master.
#  push:
#    branches:
#    - master
jobs:
  build-linux:
    runs-on: ubuntu-latest
    env:
      BOOST_INCDIR: "/usr/include"
      BOOST_LINK: "/usr/lib/x86_64-linux-gnu/libboost_serialization.a"
      EIGEN_PATH: /home/runner/work/opt/eigen
      TBB_INCDIR: /usr/include
      TBB_LINK: "-ltbb"
      GSL_INCDIR: /usr/include
      GSL_C_LINK: "-lgsl -lgslcblas"
      GLPK_INCLUDE: "-I/usr/include"
      GLPK_LINK: "-L/usr/lib -lglpk -Wl,-rpath,/usr/lib"
      FLINT_INCDIR: "/include"
      FLINT_LINK: "-lflint"
      CDDLIB_INCLUDE: "-I/home/runner/work/opt/cddlib/include/cddlib"
      CDDLIB_DOUBLE_LINK: "-L/home/runner/work/opt/cddlib/lib  -lcdd -Wl,-rpath,/home/runner/work/opt/cddlib/lib"
      CDDLIB_GMP_LINK: "-L/home/runner/work/opt/cddlib/lib  -lcddgmp -Wl,-rpath,/home/runner/work/opt/cddlib/lib"
      NETCDF_CXX_ALLINC: "-I/home/runner/work/opt/netcdf-cxx4-4.3.1/include -I/home/runner/work/opt/netcdf-cxx4-4.3.1/include"
      NETCDF_CXX_LINK: "-L/home/runner/work/opt/netcdf-cxx4-4.3.1/lib -lnetcdf_c++4 -Wl,-rpath,/home/runner/work/opt/netcdf-cxx4-4.3.1/lib"
      NAUTY_PATH: /home/runner/work/opt/nauty
      NAUTY_INCLUDE: "-I/home/runner/work/opt/nauty/include"
      NAUTY_LINK: "/home/runner/work/opt/nauty/lib/libnauty_static.a"
      MPFR_INCDIR: /usr/include
      MPFR_LINK: "-lmpfr"
      GMP_PATH: /home/runner/work/opt/gmp-6.2.1
      GMP_INCDIR: /home/runner/work/opt/gmp-6.2.1/include
      GMP_CXX_LINK: "/home/runner/work/opt/gmp-6.2.1/lib/libgmpxx.a /home/runner/work/opt/gmp-6.2.1/lib/libgmp.a"

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libgdbm-dev libsnappy-dev make pkg-config rlwrap software-properties-common zlib1g-dev
          sudo apt-get install -y wget
          sudo apt-get install -y g++-11 clang-12
          sudo apt-get install -y g++ gcc gfortran
          sudo apt-get install -y cmake
          sudo apt-get install -y libgmp-dev
          sudo apt-get install -y libboost-dev libboost-mpi-dev libboost-serialization-dev
          sudo apt-get install -y libtbb-dev libgsl-dev libglpk-dev libflint-dev
          sudo apt-get install -y autoconf autotools-dev libtool
          sudo apt-get install -y texlive-latex-base # needed for the CDD manual to be compiled

      - name: Build and release
        run: |
          ls
          echo "After ls"

          pwd
          echo "After pwd"

          ls basic_common_cpp
          echo "After ls basic_common_cpp"

          mkdir basic_common_cpp/ExternalLib/nauty/build
          cd basic_common_cpp/ExternalLib/nauty/build && cmake -DCMAKE_INSTALL_PREFIX:PATH=$NAUTY_PATH .. && make all install && cd ../../../..
          echo "After nauty compilation"

          # We need specific version 3.3.9 because of a bug in 3.4.0 for algebraic data types.
          wget https://gitlab.com/libeigen/eigen/-/archive/3.3.9/eigen-3.3.9.tar.gz
          tar -vxzf eigen-3.3.9.tar.gz
          mv eigen-3.3.9 /home/runner/work/opt/eigen
          echo "After eigen-3.3.9 set up"

          # We need to compile GMP in static
          # wget --no-check-certificate https://gmplib.org/download/gmp/gmp-6.2.1.tar.bz2
          wget https://ftp.gnu.org/gnu/gmp/gmp-6.2.1.tar.bz2
          tar -vxjf gmp-6.2.1.tar.bz2
          cd gmp-6.2.1 && ./configure --enable-shared=no --enable-static=yes --enable-cxx --prefix=$GMP_PATH && make && make install && cd ..
          echo "After gmp-6.2.1 compilation"

          cd src_lorentzian && make -f Makefile_target && strip LORENTZ_FundDomain_AllcockEdgewalk && cd ..
          echo "After compilation of LORENTZ_FundDomain_AllcockEdgewalk"

          cd src_latt && make -f Makefile_target && strip sv_exact LATT_canonicalize && cd ..
          echo "After compilation of sv_exact and LATT_canonicalize"

      - name: Make zip of LORENTZ_FundDomain_AllcockEdgewalk
        uses: papeloto/action-zip@v1
        with:
          files: src_lorentzian/LORENTZ_FundDomain_AllcockEdgewalk
          dest: LORENTZ_FundDomain_AllcockEdgewalk-linux.zip

      - name: Make zip of sv_exact
        uses: papeloto/action-zip@v1
        with:
          files: src_latt/sv_exact
          dest: sv_exact-linux.zip

      - name: Make zip of LATT_canonicalize
        uses: papeloto/action-zip@v1
        with:
          files: src_latt/LATT_canonicalize
          dest: LATT_canonicalize-linux.zip

      - name: Upload LORENTZ_FundDomain_AllcockEdgewalk to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: LORENTZ_FundDomain_AllcockEdgewalk-linux.zip
          asset_name: LORENTZ_FundDomain_AllcockEdgewalk-linux-FINAL.zip
          tag: ${{ github.ref }}
          overwrite: true

      - name: Upload sv_exact to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: sv_exact-linux.zip
          asset_name: sv_exact-linux-FINAL.zip
          tag: ${{ github.ref }}
          overwrite: true

      - name: Upload LATT_canonicalize to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: LATT_canonicalize-linux.zip
          asset_name: LATT_canonicalize-linux-FINAL.zip
          tag: ${{ github.ref }}
          overwrite: true
